// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.PowerUp2018Safety;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc2619.PowerUp2018Safety.commands.*;



/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS



        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("BrakeOff", new BrakeOff());
        SmartDashboard.putData("BrakeOn", new BrakeOn());
        SmartDashboard.putData("CloseClaw", new CloseClaw());
        SmartDashboard.putData("InvertDrive", new InvertDrive());
        SmartDashboard.putData("LowerShoulder", new LowerShoulder());
        SmartDashboard.putData("OpenClaw", new OpenClaw());
        SmartDashboard.putData("OverrideElevator: 0.5", new OverrideElevator(0.5));
        SmartDashboard.putData("OverrideSpeedQuarter", new OverrideSpeedQuarter());
        SmartDashboard.putData("ShiftLow", new ShiftLow());
        SmartDashboard.putData("TankDrive", new TankDrive());
        SmartDashboard.putData("ToggleLockStraight", new ToggleLockStraight());
        SmartDashboard.putData("LowerShoulderAndCollect", new LowerShoulderAndCollect());
        SmartDashboard.putData("StopCollector", new StopCollector());
        SmartDashboard.putData("RunCollector: Forward", new RunCollector(0.5));
        SmartDashboard.putData("RunCollector: ReverseFast", new RunCollector(-0.5));
        SmartDashboard.putData("RunCollector: ReverseSlow", new RunCollector(-0.37));
        SmartDashboard.putData("StopElevator", new StopElevator());
        SmartDashboard.putData("ElevateToXPositionMotionMagic: max", new ElevateToXPositionMotionMagic(1));
        SmartDashboard.putData("ElevateToXPositionMotionMagic: min", new ElevateToXPositionMotionMagic(0));
        SmartDashboard.putData("ElevateToXPositionMotionMagic: switch", new ElevateToXPositionMotionMagic(0.3));
        SmartDashboard.putData("OverrideSpeedHalf", new OverrideSpeedHalf());
        SmartDashboard.putData("ClimbUp", new ClimbUp());
        SmartDashboard.putData("CheckCube", new CheckCube());
        SmartDashboard.putData("ClimbDown", new ClimbDown());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

